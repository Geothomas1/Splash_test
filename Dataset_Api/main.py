import time
import urllib
import google_play_scraper
import play_scraper

from google_play_scraper import app
from googleapiclient.discovery import build
from google.oauth2 import service_account


SCOPES = ['https://www.googleapis.com/auth/spreadsheets']
SERVICE_ACCOUNT_FILE = 'key.json'

creds = None
creds = service_account.Credentials.from_service_account_file(SERVICE_ACCOUNT_FILE, scopes=SCOPES)

# The ID a sample spreadsheet.
SPREADSHEET_ID = '1r1ifW642gcbAxDN6NbktgFhxUMhqRCKJx3CK8E82UsA'
service = build('sheets', 'v4', credentials=creds)

# Call the Sheets API
sheet = service.spreadsheets()

mylist=['com.skydot.docxreader.docx.docxviewer.document.doc.office.viewer.reader.word', 'com.skydot.whatsapp.status.downloader.video.image.saver', 'com.skydot.pptreader.ppt.pptx.viewer.slides.pptviwer.reader.presentations', 'com.skydot.privatenotepad.withlock', 'com.skydot.pdfreader.pdf.tool.basic.pdfviewer.lite', 'com.skydot.pdfreader.pdf.tool.reader.viewer.basic.pdfviewer.pro', 'com.skydot.qr.scanner.qrscanner.barcode.scanner.reader', 'com.skydot.simplyquotes', 'es.socialpoint.DragonCity', 'es.socialpoint.wordlife', 'es.socialpoint.MonsterLegends', 'es.socialpoint.dragonland', 'es.socialpoint.chefparadise', 'es.parrotgames.restaurantcity', 'com.trivia.star.android', 'com.platinumplayer.word.addict', 'com.fortune.phrases.android', 'com.word.forest.android', 'com.matchy.pics.android', 'com.wordlicious.android', 'com.best.blocks.superlucky.android', 'com.superlucky.solitaire.classic.android', 'com.restaurant.rivals.android', 'com.word.balloons.android', 'com.snapartphotoeditor.pdfreader.documentmanager.pdfviewer.pdfreader.pdf.reader', 'com.snapartphotoeditor.document.manager.reader.documentviewer.documentreader.office.reader.docxviewer', 'com.snapartphotoeditor.squarepic.photoeditor.instashot.nocrop.squareinpic.squarequick.photoeffect', 'com.snapartphotoeditor.mutevideomaker.videosilent.mutevideo.videomute.soundremover.silentvideomaker', 'com.snapartphotoeditor.mirror.photoeditor.mirrorcollage.styleinstamirror.mirrorphotoeffect.echomirrormagic', 'com.snapartphotoeditor.photo.videos.slideshow.videomaker.with.music.videoeditor.musicvideomaker', 'com.snapartphotoeditor.aging.young.makeupbeautycamera.ai.face.ageface.filter.camera.face.effect.makemeold', 'com.snapartphotoeditor.Ringtone.iringtone.ringtoneforos14.ringtonemaker.ringtonecreator', 'com.snapartphotoeditor.instant.personalloan.cashcredit.loanguide.personalloaninstant.creditscoreonlineloan.aadhar.instant.bank.money', 'com.snapartphotoeditor.imagetopdf.pdfconverter.image2pdf.jpgtopdf.pngtopdf', 'com.snapartphotoeditor.crazzysnapeffect.photoeditor.crazzymirroreffect.snapphotoeffect.magicsnapeffect.crazysnap.photoeffect', 'com.snapartphotoeditor.glass.crack.screen.prank.brokenscreenprank.brokenscreeneffect.launcher.brokenscreen', 'com.snapartphotoeditor.blendme.photoeditor.blendmephotomixer.photomixer.multiple.photoblender.doubleexposure', 'com.snapartphotoeditor.mosaicphotoeffects.mosaiceffectphototeditor.piccollagemosaic.mosaiceffect.mosaicphoto.photoeffect', 'com.oakgames.linked2248.numberpuzzle', 'com.unicostudio.blastfriends', 'com.oakgames.fused.numberpuzzle', 'com.unicostudio.mirror', 'com.mixgames.okcular', 'com.unicostudio.wordgameturkish', 'com.unicostudio.sled', 'com.mixgames.fifty50fifty', 'com.unicostudio.wordfest', 'com.digitalfunmedia.halloweenwordsearchpuzzle', 'com.digitalfunmedia.christmaspuzzles', 'com.digitalfunmedia.ambience', 'com.digitalfunmedia.jumbledquotes', 'com.digitalfunmedia.jigsaws_unlimited_turn_any_photo_into_a_puzzle', 'com.digitalfunmedia.autumnphotopuzzle', 'com.digitalfunmedia.christmaswordcrush', 'com.digitalfunmedia.wordsearchcrush', 'com.digitalfunmedia.aimemorygame', 'com.digitalfunmedia.christmaswordsearchpuzzles', 'com.digitalfunmedia.wordseekdeluxepuzzle', 'com.digitalfunmedia.mazes', 'com.words.kingdom.wordsearch', 'com.blacklight.flow', 'com.blacklight.rebus.piclex', 'games.urmobi.idle.artist', 'com.urmobi.funseeker', 'games.urmobi.shape.puzzle', 'spot.the.room', 'games.urmobi.hot.detective.spot.the.difference', 'urmobi.games.magic.find.the.difference', 'games.urmobi.pirates.of.mind', 'spot.the.difference.game', 'games.urmobi.word.adventure', 'co.urmobi.casual.foreststories', 'games.urmobi.home.golf', 'games.urmobi.balls.count', 'games.urmobi.card.match', 'games.urmobi.cosmo.idle', 'games.urmobi.meditation.antistress', 'games.urmobi.bugs.antistress', 'games.urmobi.crosswordoku', 'games.urmobi.herbs.word.puzzle', 'games.urmobi.slide.block.puzzle', 'games.urmobi.sushi.one.line.puzzle', 'co.urmobi.balls.vs.animals.brick.crush', 'games.urmobi.pebbles.swap.puzzle', 'urmobi.games.infectedkingdom', 'co.urmobi.rusty.yard', 'co.urmobi.BlockPuzzle', 'co.urmobi.cave', 'co.urmobi.hollywood_master', 'co.urmobi.CountAndLoop', 'com.Urmobico.toffee.line.puzzle', 'urmobi.games.quizchallenge', 'com.urmobi.funnytiles', 'co.urmobi.stick.challenge', 'co.urmobi.word.bubbles', 'spot.the.difference.xmas', 'com.bitmango.go.lollipopmatch3', 'com.bitmango.go.lollipop2match3', 'com.puzzle1studio.go.brickbreakerlegendballs', 'com.bitmango.go.lollipoplinkmatch', 'com.bitmango.go.mergeblockstarfinders', 'com.bitmango.rolltheballunrollme', 'com.puzzle1studio.go.wordsearchinspiration', 'com.bitmango.go.bunnypopbubble', 'com.bitmango.go.fruitsmaniamatch3', 'com.bitmango.go.jewelpopmania', 'com.bitmango.go.pipelineshexa', 'com.bitmango.go.stringart', 'com.puzzle1studio.go.wordcalmcross', 'com.bitmango.go.make7hexapuzzle', 'com.bitmango.go.bunnypoprescuepuzzle', 'com.bitmango.go.gemblast', 'com.bitmango.go.wordcookiescross', 'com.bitmango.go.mahjongforestjourney', 'com.bitmango.go.unblockcasual', 'com.bitmango.go.fruitsmania2match3', 'com.bitmango.go.makehexa', 'com.bitmango.go.spidersolitairekingdom', 'com.bitmango.wordscrush', 'com.puzzle1studio.go.perfectblockpuzzle', 'com.bitmango.go.blockpuzzlejewelhexamaster', 'com.bitmango.go.wordtiles', 'com.bitmango.go.wordsearchhiddenwords', 'com.bitmango.go.happybubble', 'com.bitmango.go.wordchampion', 'com.bitmango.block', 'com.bitmango.go.blockpuzzlestarfinder', 'com.bitmango.go.jewelpoptreasureisland', 'com.bitmango.go.wordsfarmcross', 'com.bitmango.go.fourpicsonewordsolvethequiz', 'com.bitmango.blockjam', 'com.bitmango.go.jewelmatchkingquest', 'com.bitmango.go.solitaireparadisetripeaks', 'com.bitmango.sudokucafe1', 'com.bitmango.go.bitmangoedu', 'com.chippymediallc.word.nut.android', 'tr.com.apps.fashion.battle', 'tr.com.apps.carpet.roller', 'tr.com.apps.trivia.race', 'tr.com.apps.draw.cubes2', 'tr.com.apps.car.knots', 'tr.com.apps.word.box.puzzle', 'tr.com.apps.car.stack', 'tr.com.apps.kk', 'co.fourapps.awordgame', 'tr.com.apps.detective.puzzle.mystery', 'com.wordoftheday.en', 'com.motdujour.fr', 'com.palabradeldia.es', 'com.biggiko.zulu', 'com.palavradodia.pt', 'ru.slovoslovo.wordoftheday', 'in.playsimple.wordtrip', 'in.crossy.daily_crossword', 'com.littleengine.wordpal', 'in.daily_puzzle.crossword', 'in.playsimple.tripcross', 'in.WordSearch.WordBliss', 'in.crossword.wordplanet', 'in.playsimple.wordbingo', 'in.cardgame.solitaire', 'in.playsimple.word_up', 'com.trapmusic.trapmix', 'com.wordoffice.officeviewer.pdfviewer', 'free.music.musicdownloader.mp3.download', 'com.videoshow.videoeditor', 'com.player.videoplayer.allformat', 'com.qiiwi.wordington', 'com.qiiwi.hellskitchen', 'com.qiiwi.puzzleton', 'com.qiiwi.coronationstreet', 'com.qiiwi.backpacker', 'com.qiiwi.wiap2', 'com.qiiwi.magicgifts', 'com.qiiwi.wordsinapic', 'com.office.viewer.wordoffice.docxreader.officetool2019.documentviewer.pdf', 'com.wordfarm.scapes', 'balls.glow.bricks.breaker.brounce.ballz.puzzle.free', 'solitaire.solitairemaker.solitaire.klondike.card', 'solitaire.solitairemaker.solitaire.klondike.card.spider', 'mahjong.brainmaker.oriental.solitaire.board.freemahjong', 'balls.glow.bricks.breaker.bounce.ballz.crush.quest', 'pipelines.connect.pipegames.puzzle.pipeplumber.flow', 'block.puzzle.hexa.tetris.block.blast.blockpuzzle', 'roll.unblock.ball.slide.puzzle.rolltheball.free', 'word.brainmaker.puzzle.wordcandy.freeword', 'com.word.pets.android', 'com.best.blocks.android', 'com.color.match.android', 'com.word.sudoku.android', 'com.lookman.fallingword', 'com.lookman.carkifelek', 'com.lookman.dusenkelime', 'com.ltyazilim.solotest', 'com.lookman.blokkelime', 'com.lookman.blokbulmaca', 'com.lookman.brickbreaker', 'com.donkeysoft.wordwowfree', 'com.donkeysoft.wordwowbigcity', 'com.donkeysoft.wordwowseasons', 'com.donkeysoft.aroundtheworld', 'com.donkeysoft.wordforwordfree', 'com.donkeysoft.SinkOrFloatLite', 'com.donkeysoft.pictosaurus', 'com.donkeysoft.heavyorlitefree', 'se.maginteractive.wordzee', 'se.maginteractive.worddomination', 'se.maginteractive.rumble.free', 'se.maginteractive.wordbrain', 'se.maginteractive.quizduel2', 'se.maginteractive.wordalot', 'se.maginteractive.wordbrain2', 'com.dimico.painthit', 'se.maginteractive.rumble', 'com.rishabhk.vocabbuilder', 'com.rishabhk.idiomsandphrases', 'com.rishabhk.countries', 'com.rishabhkh.batchalarm', 'com.PackMez.wordbrainboom', 'com.LawyApp.FelixJumpBall', 'com.PackMez.helixspacejump', 'com.PackMez.kelimededektifi', 'tr.com.apps.cubsy', 'tr.com.apps.kelime.gezmece.oyunu', 'tr.com.apps.wiper', 'tr.com.apps.defense2048', 'tr.com.apps.ww', 'tr.com.apps.hexart', 'com.aaaudi.wordmaker', 'com.aaaudi.nonogram', 'com.aaaudi.justblock', 'com.newpubco.cross', 'in.tripeaks.solitaire', 'com.sgg.picowords', 'com.sgg.crosswords', 'com.sgg.sweets4', 'com.sgg.maze', 'com.sgg.connect3', 'com.sgg.mega', 'com.sgg.sunnywords', 'com.sgg.connect2', 'com.sgg.frostywords', 'com.sgg.crosswords2', 'net.sjava.openofficeviewer', 'net.sjava.officereader', 'net.sjava.docs', 'net.sjava.file', 'net.sjava.barcode', 'com.puzzle.jigsaw.braingame.jigsawpuzzle', 'com.gameoffline.klondike.solitaire.vegas', 'com.bsoftstudio.airforce', 'com.puzzle.merge.number.shooter', 'com.puzzle.jigsaw.braingame.ultimatejigsaw', 'com.puzzle.empire2048.shooter', 'com.gamestd.fresh.blockpuzzle.offlinegame', 'com.bs.word.search.wordsearch.wordgames.findword.free.puzzle.games', 'com.bsoftstudio.spaceforce.alienwar', 'com.puzzle.sweet.candy.match', 'com.mm.tetris.classic.free', 'com.mm.word.connect', 'com.m2.bounce.classic.free', 'com.mm.blockpuzzle.event', 'com.mm.blockpuzzle.poke', 'com.mm.roll.the.ball.slide.puzzle', 'com.mm.tap.and.fly', 'com.cookapps.ff.moderncity', 'com.cookapps.ff.luxuryinteriors', 'com.cookapps.wonder.merge.dragon.magic.evolution.merging.wondermerge', 'com.cookapps.redesignstar.homemakeover', 'com.cookapps.ff.myfirstmakeover', 'com.cookapps.renovationraidersa', 'com.cookapps.homedesignny', 'com.cookapps.pianocat.roomdesign', 'com.cookapps.mylotterydreamhome', 'com.cookapps.ff.mdh', 'com.cookapps.sunnyhouse', 'com.cookapps.hawaiilife', 'com.cookapps.aimees.interiors.home.design.aimeesinteriors', 'com.cookapps.caribbeanlife', 'com.cookapps.randomroyale', 'com.cookapps.my.dream.garden.home.design.mydreamgarden', 'com.cookapps.magic.castle.piano.tile', 'com.cookapps.milliondollarinterior', 'com.cookapps.playgrounds.subway.bubble.empire', 'com.cookapps.housemakeover', 'com.cookapps.renovationraidersb', 'com.cookapps.garden.life.home.design.gardenlife', 'com.cookapps.paradiselife', 'com.cookapps.afkdungeon', 'com.cookapps.dream.planner', 'com.cookapps.ff.modernslot', 'com.cookapps.amazinginterior', 'com.cookapps.cashadventure', 'com.cookapps.ff.hotelrenovation', 'com.cookapps.playgrounds.ff.jellypopmania', 'com.cookapps.homecooking', 'com.cookapps.renovatetorent', 'com.cookapps.playgrounds.ff.aliceblast', 'com.cookapps.ff.worldtrip', 'com.cookapps.ff.aladdinblast', 'com.cookapps.tile.match.blast', 'com.cookapps.wordlife', 'com.cookapps.houseofwords', 'com.cookapps.beagles.ng003', 'com.cookapps.myperfecthouse', 'com.cookapps.rogueidle', 'com.cookapps.geniesgold', 'com.cookapps.buggle2m', 'com.cookapps.viva.pharaoh.fortune.match.gem.crush.jewel.games', 'com.cookapps.viva.jewels.genies.aladdin.magic.gems.match.quest', 'com.cookapps.myperfecthouse3match', 'com.cookapps.playgrounds.ff.waterblast', 'com.cookapps.ff.luxurymatchsquare', 'com.cookapps.ff.pharaohblast', 'com.cookapps.bubblecoco', 'com.bsoftstudio.navalbattleship.pvpgame', 'com.allgame.fruitburst.match3game.mania', 'com.bsoftgame.blockpuzzle.retro.offlinegame.classicpuzzle', 'com.wordsearch.findword.free.puzzle.games.v2', 'com.sgg.mega2', 'com.sgg.wordsincolor', 'com.sgg.wordrings2', 'com.sgg.pics2', 'com.sgg.connect', 'com.sgg.clues', 'com.sgg.wordtower2', 'com.sgg.wordrings3', 'com.sgg.mega3', 'com.sgg.wordcabin', 'com.sgg.elite', 'com.sgg.search', 'com.sgg.wordiary', 'com.sgg.elite2', 'com.sgg.mystery.words', 'com.sgg.tastywords2', 'com.sgg.wordtower', 'com.sgg.wordrings4', 'com.sgg.collapse2', 'com.sgg.pics', 'com.sgg.trivia', 'com.sgg.sweets5', 'com.sgg.sweets2', 'com.sgg.category', 'com.sgg.wordrings', 'com.sgg.crossword', 'com.sgg.twopics', 'com.sgg.wordtreasure', 'com.sgg.videos', 'com.sgg.wordcatcher', 'com.sgg.parts', 'com.sgg.escapes', 'com.sgg.mix', 'com.sgg.sweets3', 'com.sgg.sweets', 'com.sgg.quotes', 'com.sgg.imposter', 'com.sgg.jigsaw', 'com.sgg.riddles', 'com.sgg.dots', 'com.sgg.collapse', 'com.sgg.morph2', 'com.sgg.shadows2', 'com.sgg.morph', 'com.sgg.letters', 'com.sgg.shadows', 'com.sgg.onepic', 'com.sgg.picsde', 'com.sgg.pics_fr', 'com.sgg.tales2', 'com.sgg.wt', 'com.sgg.tales', 'com.sgg.archipelago_kr', 'com.sgg.sp2', 'com.sgg.ts', 'com.sgg.annabel']
print(len(mylist))
c=1
data = []
for i in mylist:
    try:
        result = app(i, lang='en', country='us')
        res=play_scraper.details(i)
        data.append([
            result['title'] if result['title'] != None else  'N/A' if 'title' in result.keys() else  'N/A',
            result['appId'] if result['appId'] != None else  'N/A' if 'appId' in result.keys() else  'N/A',
            result['genre'] if result['genre'] != None else  'N/A' if 'genre' in result.keys() else  'N/A',
            result['score'] if result['score'] != None else  'N/A' if 'score' in result.keys() else  'N/A',
            result['ratings'] if result['ratings'] != None else  'N/A' if 'ratings' in result.keys() else  'N/A',
            result['installs'] if result['installs'] != None else  'N/A' if 'installs' in result.keys() else  'N/A',
            result['minInstalls'] if result['minInstalls'] != None else  'N/A' if 'minInstalls' in result.keys() else  'N/A',
            result['free'] if result['free'] != None else  'N/A' if 'free' in result.keys() else  'N/A',
            result['price'] if result['price'] != None else  'N/A' if 'price' in result.keys() else  'N/A',
            result['currency'] if result['currency'] != None else  'N/A' if 'currency' in result.keys() else  'N/A',
            result['size'] if result['size'] != None else  'N/A' if 'size' in result.keys() else  'N/A',
            result['androidVersion'] if result['androidVersion'] != None else  'N/A' if 'androidVersion' in result.keys() else  'N/A',
            result['developerId'] if result['developerId'] != None else  'N/A' if 'developerId' in result.keys() else  'N/A',
            result['developerWebsite'] if result['developerWebsite'] != None else  'N/A' if 'developerWebsite' in result.keys() else  'N/A',
            result['developerEmail'] if result['developerEmail'] != None else  'N/A' if 'developerEmail' in result.keys() else  'N/A',
            result['released'] if result['released'] != None else  'N/A' if 'released' in result.keys() else  'N/A',
            res['updated'] if res['updated'] != None else  'N/A' if 'updated' in res.keys() else  'N/A',
            result['privacyPolicy'] if result['privacyPolicy'] != None else  'N/A' if 'privacyPolicy' in result.keys() else  'N/A',
            result['contentRating'] if result['contentRating'] != None else  'N/A' if 'contentRating' in result.keys() else  'N/A',
            result['adSupported'] if result['adSupported'] != None else  'N/A' if 'adSupported' in result.keys() else  'N/A',
            result['offersIAP'] if result['offersIAP'] != None else  'N/A' if 'offersIAP' in result.keys() else  'N/A',
            result['editorsChoice'] if result['editorsChoice'] != None else  'N/A' if 'editorsChoice' in result.keys() else  'N/A',
            result['summary'] if result['summary'] != None else  'N/A' if 'summary' in result.keys() else  'N/A',
            result['reviews'] if result['reviews'] != None else  'N/A' if 'reviews' in result.keys() else  'N/A',
            result['androidVersionText'] if result['androidVersionText'] != None else  'N/A' if 'androidVersionText' in result.keys() else  'N/A',
            result['developer'] if result['developer'] != None else  'N/A' if 'developer' in result.keys() else  'N/A',
            result['developerAddress'] if result['developerAddress'] != None else  'N/A' if 'developerAddress' in result.keys() else  'N/A',
            result['developerInternalID'] if result['developerInternalID'] != None else  'N/A' if 'developerInternalID' in result.keys() else  'N/A',
            result['version'] if result['version'] != None else  'N/A' if 'version' in result.keys() else  'N/A'])
        print(c)
        print(result['appId'])
        c=c+1
        # if 40 and (c % 40) == 0:
        #     print("On Sleep 62 sec")
        #     time.sleep(62)
        # print(data)
    except urllib.error.HTTPError:
        print('Exception 1 skip')
        continue
    except google_play_scraper.exceptions.NotFoundError:
        print('Exception 2 skip')
        continue
result1 = sheet.values().append(spreadsheetId=SPREADSHEET_ID,range="Sheet2!A1:AC1", valueInputOption="USER_ENTERED",insertDataOption="INSERT_ROWS",body={"values":data}).execute()

    